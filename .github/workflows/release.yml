name: Release

on:
  push:
    branches:
      - main

concurrency:
  group: release
  cancel-in-progress: false

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.sln') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Cache build output
        uses: actions/cache@v4
        with:
          path: |
            **/bin
            **/obj
          key: ${{ runner.os }}-build-${{ hashFiles('**/*.cs', '**/*.csproj', '**/*.sln') }}
          restore-keys: |
            ${{ runner.os }}-build-
      - name: Restore dependencies
        run: dotnet restore Bill.sln
      - name: Build application
        run: dotnet build --configuration Release --no-restore
      - name: Publish application
        run: dotnet publish Api/Api.csproj --configuration Release --output ./publish --no-build --self-contained false
      - name: Archive
        working-directory: publish
        run: zip -r ../release.zip .
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::633193633564:role/GitHubActionAssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ap-southeast-2
      - name: Upload to S3
        run: aws s3 cp release.zip s3://billreleases/${{ github.sha }}.zip
      - name: Create EB Application Version
        run: aws elasticbeanstalk create-application-version --application-name "bill" --version-label "${{ github.sha }}" --source-bundle S3Bucket="billreleases",S3Key="${{ github.sha }}.zip"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::633193633564:role/GitHubActionAssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ap-southeast-2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        working-directory: iac
        run: terraform init
      - name: Terraform Apply
        working-directory: iac
        run: terraform apply -auto-approve -var="application_version=${{ github.sha }}" -var="discord_webhook_url=${{ secrets.DISCORD_WEBHOOK_URL }}"
